interval=.5, ani.options(convert = 'C:/Program Files/ImageMagick-7.0.7-Q16/magick.exe'))
source('C:/Users/deva4998/Desktop/tiff_to_gif.R')
library(animation)
source('C:/Users/deva4998/Desktop/tiff_to_gif.R')
source('C:/Users/deva4998/Desktop/tiff_to_gif.R')
source('C:/Users/deva4998/Desktop/tiff_to_gif.R')
source('C:/Users/deva4998/Desktop/tiff_to_gif.R')
source('C:/Users/deva4998/Desktop/tiff_to_gif.R')
source('C:/Users/deva4998/Desktop/tiff_to_gif.R')
source('C:/Users/deva4998/Desktop/tiff_to_gif.R')
source('C:/Users/deva4998/Desktop/tiff_to_gif.R')
source('C:/Users/deva4998/Desktop/tiff_to_gif.R')
source('C:/Users/deva4998/Desktop/tiff_to_gif.R')
data(trees)
data(ChickWeight)
head(trees)
head(ChickWeight)
library(snotelr)
snotel.explorer()
a<-download.snotel(site = 623)
snotel.info(path = ".")
data = snotel.info(path = NULL)
download.snotel(site = 623)
a<-download.snotel(site = 623)
data
tidy(mg)
# let's simulate the data the explanatory variables: temperature (x1),
# precipitation (x2) and the treatment (1=Control, 2= N addition)
set.seed(1)
x1 <- rnorm(100, 10, 2)
x2 <- rnorm(100, 100, 10)
modmat <- model.matrix(~x1 + x2, data = data.frame(x1, x2))
vector of fixed effect
betas <- c(10, 2, 0.2, 3)
vector of fixed effect
betas <- c(10, 2, 0.2)
betas <- c(10, 2, 0.2)
y <- rnorm(n = 100, mean = modmat %*% betas, sd = 1)
# first model
m <- lm(y ~ x1 + x2)
m$coefficients[1]
m$coefficients[2]
summary(m)
install.packages("dataone")
install.packages("dataone")
library (dataone)
cn <- CNode("PROD")
mn <- getMNode(cn, "urn:node:KNB")
library(XML)
metadata <- rawToChar(getObject(mn, id))
doc = xmlRoot(xmlTreeParse(metadata, asText=TRUE, trim = TRUE, ignoreBlanks = TRUE))
tf <- tempfile()
saveXML(doc, tf)
file.show(tf)
library(dataone)
cn <- CNode("PROD")
mn <- getMNode(cn, "urn:node:KNB")
mySearchTerms <- list(q="abstract:salmon+AND+keywords:spawn+AND+keywords:chinook",
fl="id,title,dateUploaded,abstract,size",
fq="dateUploaded:[2017-06-01T00:00:00.000Z TO 2017-07-01T00:00:00.000Z]",
sort="dateUploaded+desc")
result <- query(mn, solrQuery=mySearchTerms, as="data.frame")
result[1,c("id", "title")]
id <- result[1,'id']
cn <- CNode("PROD")
mn <- getMNode(cn, "urn:node:LTER")
mn
qy <- dataone::query(cn, list(
rows = "300",
q    = "title:*stream chemistry*",
fq   = "(title:*streamflow*)",
fl   = "id,title,dateModified"),
as = "data.frame"))
qy <- dataone::query(cn, list(
rows = "300",
q    = "title:*stream*",
fq   = "(title:*streamflow*)",
fl   = "id,title,dateModified"),
as = "data.frame"))
qy <- dataone::query(cn, list(
rows = "300",
q    = "title:*stream*",
fq   = "(title:*streamflow*)",
fl   = "id,title,dateModified"),
as = "data.frame")
qy
library(dplyr)
qy <- slice(qy, grep("^doi", id, invert = TRUE)))
qy <- slice(qy, grep("^doi", id, invert = TRUE))
qy
qy <- arrange(qy, desc(id), desc(dateModified))
qy
library(dplyr)
library(datone)
qy <- dataone::query(cn, list(
rows = "300",
q    = "title:*stream chemistry*",
fq   = "(title:*streamflow*)",
fl   = "id,title,dateModified"),
as = "data.frame"))
qy <- slice(qy, grep("^doi", id, invert = TRUE)))
qy <- arrange(qy, desc(id), desc(dateModified))
library(dplyr)
library(datone)
qy <- dataone::query(cn, list(
rows = "300",
q    = "title:*stream chemistry*",
fq   = "(title:*streamflow*)",
fl   = "id,title,dateModified"),
as = "data.frame"))
qy <- slice(qy, grep("^doi", id, invert = TRUE))
qy <- arrange(qy, desc(id), desc(dateModified))
qy
typeof(qy)
yy[20]
qy[20]
qy[20:]
qy[:, 1]
tail(qy)
mySearchTerms <- list(q="https://portal.edirepository.org:443/nis/simpleSearch?defType=edismax&q=*:*&fq=scope:(knb-lter-and)&fq=-scope:ecotrends&fq=-scope:lter-landsat*&fl=id,packageid,title,author,organization,pubdate,coordinates&debug=false",
fl="id,packageid,title,author,organization,pubdate,coordinates&debug=false",
fq="dateUploaded:[2017-06-01T00:00:00.000Z TO 2017-07-01T00:00:00.000Z]",
sort="dateUploaded+desc")
mySearchTerms
mySearchTerms <- list(q="https://portal.edirepository.org:443/nis/simpleSearch?defType=edismax&q=*:*&fq=scope:(knb-lter-and)&fq=-scope:ecotrends&fq=-scope:lter-landsat*&fl=id,packageid,title,author,organization,pubdate,coordinates&debug=false",
fl="id,packageid,title,author,organization,pubdate,coordinates&debug=false",
fq="dateUploaded:[2017-06-01T00:00:00.000Z TO 2017-07-01T00:00:00.000Z]",
sort="dateUploaded+desc")
result <- query(mn, solrQuery=mySearchTerms, as="data.frame")
dataRaw <- getObject(mn, "knb-lter-hbr.1")
id
library(dplyr)
library(datone)
qy <- dataone::query(cn, list(
rows = "300",
q    = "title:*stream chemistry*",
fq   = "(title:*streamflow*)",
fl   = "id,title,dateModified"),
as = "data.frame"))
qy <- slice(qy, grep("^doi", id, invert = TRUE))
qy <- arrange(qy, desc(id), desc(dateModified))
i
id
title
print(qy)
qy[20:, :]
qy[20, :]
qy[20]
qy[:3]
qy[2]
qy[1]
qy[0]
qy[2]
qy[3]
qy[3][1]
qy[3][20]
qy[3]
View(qy)
View(qy)
library(dplyr)
library(datone)
qy <- dataone::query(cn, list(
rows = "300",
q    = "title:*streamflow*",
fq   = "(title:*chemistry*)",
fl   = "id,title,dateModified"),
as = "data.frame"))
qy <- slice(qy, grep("^doi", id, invert = TRUE))
qy <- arrange(qy, desc(id), desc(dateModified))
library(dplyr)
library(datone)
qy <- dataone::query(cn, list(
rows = "300",
q    = "title:*streamflow*",
fq   = "(title:*streamflow*)",
fl   = "id,title,dateModified"),
as = "data.frame"))
qy <- slice(qy, grep("^doi", id, invert = TRUE))
qy <- arrange(qy, desc(id), desc(dateModified))
library(dataone)
install.packages("installr")
library(installr)
updateR()
library(dataone)
library(datapack)
library(RCurl)
setwd("C:/Chinmay/Github/Fetch_LTER_data/")
d1c <- D1Client("PROD", "urn:node:LTER")
#chem_pid <- "https://pasta.lternet.edu/package/report/eml/knb-lter-and/4021/21"
chem_pid <- "doi:10.6073/pasta/22cd44c4d8f970fd290371b0604d3d16"
streamflow_pid<- "doi:10.6073/pasta/ce70a42e1f637cd430d7b0fb64faefb4"
chem_pkg <- getDataPackage(d1c, chem_pid)
streamflow_pkg<- getDataPackage(d1c, streamflow_pid)
chem_urls<- names(getValue(chem_pkg, name="sysmeta@formatId"))
streamflow_urls<- names(getValue(streamflow_pkg, name="sysmeta@formatId"))
chem_urls
streamflow_urls
bytes <- getData(chem_pkg)
chem_pkg <- getDataPackage(d1c, chem_pid)
bytes <- getData(chem_pkg)
dataObj<-getDataObject(d1c, chem_pid)
bytes <- getData(dataObj)
bytes
metadataXML <- rawToChar(bytes
)
metadataXML
str(dataObj@sysmeta)
source('C:/Chinmay/Github/Fetch_LTER_data/Fetch_HJ_Andrews_Streamflow.R')
source('C:/Chinmay/Github/Fetch_LTER_data/Fetch_HJ_Andrews_Streamflow.R')
View(streamflow_pkg)
View(streamflow_pkg)
chem_urls
library(dataone)
library(datapack)
library(RCurl)
#### Files wil be stored to this dir
setwd("C:/Chinmay/Github/Fetch_LTER_data/")
d1c <- D1Client("PROD", "urn:node:LTER")
#### Get the identifier link from for the files you want to download
### This can be found on the DataOne data search portal
### e.g. The package doi is located just above the download all option
### check this link for an example https://search.dataone.org/view/https://pasta.lternet.edu/package/metadata/eml/knb-lter-and/4021/21
### and see if you can locate "package doi" link above the download all option
### Thats the string you need
#chem_pid <- "https://pasta.lternet.edu/package/report/eml/knb-lter-and/4021/21"
chem_pid <- "doi:10.6073/pasta/22cd44c4d8f970fd290371b0604d3d16"
streamflow_pid<- "doi:10.6073/pasta/ce70a42e1f637cd430d7b0fb64faefb4"
### Get the datapacakge information
chem_pkg <- getDataPackage(d1c, chem_pid)
streamflow_pkg<- getDataPackage(d1c, streamflow_pid)
### find urls to the data
chem_urls<- names(getValue(chem_pkg, name="sysmeta@formatId"))
streamflow_urls<- names(getValue(streamflow_pkg, name="sysmeta@formatId"))
chem_urls
setwd("C:/Chinmay/Github/Fetch_LTER_data/")
mainDir<- setwd
mainDir
setwd("C:/Chinmay/Github/Fetch_LTER_data/")
mainDir <- setwd
mainDir()
setwd("C:/Chinmay/Github/Fetch_LTER_data/")
mainpath <- setwd
mainpath()
mainpath
OutDir<- ("C:/Chinmay/Github/Fetch_LTER_data/HJ_Andrews")
### create dir and cwd to tht
dir.create(file.path(OutDir))
setwd(file.path(OutDir))
OutDir<- ("C:/Chinmay/Github/Fetch_LTER_data/HJ_Andrews")
### create dir and cwd to tht
dir.create(file.path(OutDir))
setwd(file.path(OutDir))
# setwd("C:/Chinmay/Github/Fetch_LTER_data/")
OutDir<- ("C:/Chinmay/Github/Fetch_LTER_data/HJ_Andrews")
### create dir and cwd to tht
ifelse(!dir.exists(file.path(OutDir)), dir.create(file.path(OutDir)), FALSE)
library(dataone)
library(datapack)
library(RCurl)
#### Files wil be stored to a sub dir in wd
# setwd("C:/Chinmay/Github/Fetch_LTER_data/")
OutDir<- ("C:/Chinmay/Github/Fetch_LTER_data/HJ_Andrews")
### create dir and cwd to tht
dir.create(file.path(OutDir))
setwd(file.path(OutDir))
library("XML")
library("methods")
xmldataframe <- xmlToDataFrame(chem_urls[6])
xmldataframe <- xmlToDataFrame(download.file(chem_urls[6], destfile = metadata.txt, method = "libcurl")
)
a <- download.file(chem_urls[6])
download.xml
install.packages("xml2")
install.packages("xml2")
install.packages("xml2")
library(xml)
library(xml2)
install.packages("xml2")
library(xml2)
download_xml(chem_urls[6])
xmldataframe <- xmlToDataFrame(download_xml(chem_urls[6]))
library(methods)
xmldataframe <- xmlToDataFrame(download_xml(chem_urls[6]))
library(xml)
install.packages("XML")
install.packages("XML")
install.packages("XML")
install.packages("XML")
library(xml)
library(XML)
library("XML")
library("methods")
xmldataframe <- xmlToDataFrame(download_xml(chem_urls[6]))
install.packages("XML")
library("XML")
library("methods")
xmldataframe <- xmlToDataFrame(download_xml(chem_urls[6]))
library(xml2)
xmldataframe <- xmlToDataFrame(download_xml(chem_urls[6]))
source('C:/Chinmay/Github/Fetch_LTER_data/Fetch_HJ_Andrews_Streamflow.R')
source('C:/Chinmay/Github/Fetch_LTER/Fetch_HJ_Andrews_StreamChemistry.R')
source('C:/Chinmay/Github/Fetch_LTER/Fetch_HJ_Andrews_StreamChemistry.R')
source('C:/Chinmay/Github/Fetch_LTER/Fetch_HJ_Andrews_StreamChemistry.R')
##################################################################################
# -*- coding: utf-8 -*-
#"""
#Created on Wed Nov 14 16:39:10 2018
#@author: chinmay deval
#
# Downloads streamchemistry data hosted on the DataOne portal
#"""
##################################################################################
library(dataone)
library(datapack)
library(RCurl)
#### dir to store files
OutDir<- ("C:/Chinmay/Github/Fetch_LTER/data/")
subdirs<- "HJ_Andrews"
dir.create(file.path(mainDir, subDir), showWarnings = FALSE)
setwd(file.path(mainDir, subDir))
dir.create(file.path(OutDir, subDir), showWarnings = FALSE)
setwd(file.path(OutDir, subDir))
##################################################################################
# -*- coding: utf-8 -*-
#"""
#Created on Wed Nov 14 16:39:10 2018
#@author: chinmay deval
#
# Downloads streamchemistry data hosted on the DataOne portal
#"""
##################################################################################
library(dataone)
library(datapack)
library(RCurl)
#### dir to store files
OutDir<- ("C:/Chinmay/Github/Fetch_LTER/data/")
subDir<- "HJ_Andrews"
dir.create(file.path(OutDir, subDir), showWarnings = FALSE)
setwd(file.path(OutDir, subDir))
dir.create(file.path(OutDir, subDir))
setwd(file.path(OutDir, subDir))
dir.create(file.path(OutDir, subDir))
##################################################################################
# -*- coding: utf-8 -*-
#"""
#Created on Wed Nov 14 16:39:10 2018
#@author: chinmay deval
#
# Downloads streamchemistry data hosted on the DataOne portal
#"""
##################################################################################
library(dataone)
library(datapack)
library(RCurl)
#### dir to store files
OutDir<- ("C:/Chinmay/Github/Fetch_LTER/data")
subDir<- "HJ_Andrews"
dir.create(file.path(OutDir, subDir))
dir.exists(file.path(OutDir, subDir))
#### dir to store files
OutDir<- ("C:/Chinmay/Github/Fetch_LTER/")
subDir<- "data"
dir.exists(file.path(OutDir, subDir))
dir.create(file.path(OutDir, subDir))
##################################################################################
# -*- coding: utf-8 -*-
#"""
#Created on Wed Nov 14 16:39:10 2018
#@author: chinmay deval
#
# Downloads streamchemistry data hosted on the DataOne portal
#"""
##################################################################################
library(dataone)
library(datapack)
library(RCurl)
#### dir to store files
OutDir<- ("C:/Chinmay/Github/Fetch_LTER/")
subDir<- "data"
### create dir and cwd to tht
dir.create(file.path(OutDir, subDir))
setwd(file.path(OutDir, subDir))
pwd
wd
getwd
print(getwd())
##################################################################################
# -*- coding: utf-8 -*-
#"""
#Created on Wed Nov 14 16:39:10 2018
#@author: chinmay deval
#
# Downloads streamchemistry data hosted on the DataOne portal
#"""
##################################################################################
library(dataone)
library(datapack)
library(RCurl)
#### dir to store files
OutDir<- ("C:/Chinmay/Github/Fetch_LTER/")
subDir<- "data/HJ_Andrews/streamchemistry"
### create dir and cwd to tht
dir.create(file.path(OutDir, subDir))
setwd(file.path(OutDir, subDir))
##################################################################################
# -*- coding: utf-8 -*-
#"""
#Created on Wed Nov 14 16:39:10 2018
#@author: chinmay deval
#
# Downloads streamchemistry data hosted on the DataOne portal
#"""
##################################################################################
library(dataone)
library(datapack)
library(RCurl)
#### dir to store files
OutDir<- ("C:/Chinmay/Github/Fetch_LTER/")
subDir<- "data"
### create dir and cwd to tht
dir.create(file.path(OutDir, subDir))
setwd(file.path(OutDir, subDir))
##################################################################################
# -*- coding: utf-8 -*-
#"""
#Created on Wed Nov 14 16:39:10 2018
#@author: chinmay deval
#
# Downloads streamchemistry data hosted on the DataOne portal
#"""
##################################################################################
library(dataone)
library(datapack)
library(RCurl)
#### dir to store files
OutDir<- ("C:/Chinmay/Github/Fetch_LTER/")
subDir<- "data"
### create dir and cwd to tht
dir.create(file.path(OutDir, subDir))
dir.create(file.path(getwd(),"HJ_Andrews"))
##################################################################################
# -*- coding: utf-8 -*-
#"""
#Created on Wed Nov 14 16:39:10 2018
#@author: chinmay deval
#
# Downloads streamchemistry data hosted on the DataOne portal
#"""
##################################################################################
library(dataone)
library(datapack)
library(RCurl)
#### dir to store files
OutDir<- ("C:/Chinmay/Github/Fetch_LTER/")
subDir<- "data"
### create dir and cwd to tht
dir.create(file.path(OutDir, subDir))
dir.create(file.path(getwd(),"HJ_Andrews", "streamchem"))
##################################################################################
# -*- coding: utf-8 -*-
#"""
#Created on Wed Nov 14 16:39:10 2018
#@author: chinmay deval
#
# Downloads streamchemistry data hosted on the DataOne portal
#"""
##################################################################################
library(dataone)
library(datapack)
library(RCurl)
#### dir to store files
OutDir<- ("C:/Chinmay/Github/Fetch_LTER/")
subDir<-c("data", "HJ_Andrews", "streamchem")
### create dir and cwd to tht
dir.create(file.path(OutDir, subDir))
##################################################################################
# -*- coding: utf-8 -*-
#"""
#Created on Wed Nov 14 16:39:10 2018
#@author: chinmay deval
#
# Downloads streamchemistry data hosted on the DataOne portal
#"""
##################################################################################
library(dataone)
library(datapack)
library(RCurl)
#### dir to store files
OutDir<- ("C:/Chinmay/Github/Fetch_LTER/")
### create dir and cwd to tht
dir.create(file.path(OutDir, "data", "HJ_Andrews", "streamchem"))
setwd(file.path(OutDir, "data", "HJ_Andrews", "streamchem"))
print(getwd())
##################################################################################
# -*- coding: utf-8 -*-
#"""
#Created on Wed Nov 14 16:39:10 2018
#@author: chinmay deval
#
# Downloads streamchemistry data hosted on the DataOne portal
#"""
##################################################################################
library(dataone)
library(datapack)
library(RCurl)
#### dir to store files
wDir<- ("C:/Chinmay/Github/Fetch_LTER/")
### create dir and cwd to tht
dir.create(file.path(wDir, "data", "HJ_Andrews", "streamchem"))
setwd(file.path(wDir, "data", "HJ_Andrews", "streamchem"))
source('C:/Chinmay/Github/Fetch_LTER/Fetch_HJ_Andrews_StreamChemistry.R')
source('C:/Chinmay/Github/Fetch_LTER/Fetch_HJ_Andrews_Streamflow.R')
